services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_pass
      POSTGRES_DB: fastapi_user
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user"]
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/usr/src/app
      - uploads_data:/tmp/uploads
    env_file:
      - .env
    environment:
      - PYTHONPATH=/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    # Charge l’instance celery_app définie dans worker/main.py
    command: celery -A worker.main:celery_app worker --loglevel=info
    volumes:
      - .:/usr/src/app
      - uploads_data:/tmp/uploads
    env_file:
      - .env
    environment:
      - PYTHONPATH=/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  pgdata:
  uploads_data:
